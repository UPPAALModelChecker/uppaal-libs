name: Create Release

on:
  push:
    tags:
      - 'v*'

concurrency:
  group: Release-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  create_entry:
    name: Create Release Entry
    runs-on: ubuntu-latest
    steps:
      - name: Create Release Entry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.push.ref }}
        run: |
          tag=${ref##*/}
          gh release create "$tag" \
             --repo="$GITHUB_REPOSITORY" \
             --title="${GITHUB_REPOSITORY#*/} ${tag#v}" \
             --generate-notes \
             --draft

  build_and_upload:
    name: Build and Upload
    needs: create_entry
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        build_type: [Debug, Release]
    runs-on: ${{ matrix.os }}
    env:
      OS_NAME: ${{ fromJson('{ "windows-latest":"windows","macos-latest":"macos","ubuntu-latest":"linux" }')[matrix.os] }}
      SUFFIX: ${{ fromJson('{ "Debug":"-dbg","Release":"" }')[matrix.build_type] }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build-${{ matrix.build_type }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Build
        run: cmake --build ${{github.workspace}}/build-${{ matrix.build_type }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{github.workspace}}/build-${{ matrix.build_type }}
        run: ctest --build-config ${{ matrix.build_type }} --output-on-failure

      - name: Package Windows
        if: ${{ matrix.os == 'windows-latest' }}
        working-directory:
        run: |
             cp ${{github.workspace}}/build-${{ matrix.build_type }}/src/${{ matrix.build_type }}/table.dll ${{github.workspace}}/libtable${SUFFIX}.dll
             zip -9 ${{github.workspace}}/uppaal-libs-${OS_NAME}${SUFFIX}.zip libtable${SUFFIX}.dll

      - name: Package macOS
        if: ${{ matrix.os == 'macos-latest' }}
        working-directory:
        run: |
             cp ${{github.workspace}}/build-${{ matrix.build_type }}/src/libtable.dylib ${{github.workspace}}/libtable${SUFFIX}.dylib
             zip -9 ${{github.workspace}}/uppaal-libs-${OS_NAME}${SUFFIX}.zip libtable${SUFFIX}.dylib

      - name: Package Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        working-directory:
        run: |
             cp ${{github.workspace}}/build-${{ matrix.build_type }}/src/libtable.so ${{github.workspace}}/libtable${SUFFIX}.so
             zip -9 ${{github.workspace}}/uppaal-libs-${OS_NAME}${SUFFIX}.zip libtable${SUFFIX}.so

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.push.ref }}
        run: |
          tag=${ref##*/}
          gh release upload "$tag" \
             ${{github.workspace}}/uppaal-libs-${OS_NAME}${SUFFIX}.zip \
             --repo="$GITHUB_REPOSITORY" \
             --clobber
