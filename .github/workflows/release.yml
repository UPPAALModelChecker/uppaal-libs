name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create_entry:
    name: Create Entry
    runs-on: ubuntu-latest
    steps:
      - name: Create Release Entry
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: (generate an automatic change log here)
          draft: true
          prerelease: false

  build_and_upload:
    name: Build and Upload
    needs: create_entry
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        build_type: [Debug, Release]
    runs-on: ${{ matrix.os }}
    env:
      OS_NAME: ${{ fromJson('{ "windows-latest":"windows","macos-latest":"macos","ubuntu-latest":"linux" }')[matrix.os] }}
      SUFFIX: ${{ fromJson('{ "Debug":"-dbg","Release":"" }')[matrix.build_type] }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build-${{ matrix.build_type }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Build
        run: cmake --build ${{github.workspace}}/build-${{ matrix.build_type }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{github.workspace}}/build-${{ matrix.build_type }}
        run: ctest --build-config ${{ matrix.build_type }} --output-on-failure

      - name: Package Windows
        if: ${{ matrix.os == windows-latest }}
        working-directory:
        run: |
             cp ${{github.workspace}}/build-${{ matrix.build_type }}/src/${{ matrix.build_type }}/table.dll ${{github.workspace}}/libtable${SUFFIX}.dll
             zip -9 ${{github.workspace}}/uppaal-libs-${OS_NAME}${SUFFIX}.zip libtable${SUFFIX}.dll

      - name: Package macOS
        if: ${{ matrix.os == macos-latest }}
        working-directory:
        run: |
             cp ${{github.workspace}}/build-${{ matrix.build_type }}/src/libtable.dylib ${{github.workspace}}/libtable${SUFFIX}.dylib
             zip -9 ${{github.workspace}}/uppaal-libs-${OS_NAME}${SUFFIX}.zip libtable${SUFFIX}.dylib

      - name: Package Linux
        if: ${{ matrix.os == ubuntu-latest }}
        working-directory:
        run: |
             cp ${{github.workspace}}/build-${{ matrix.build_type }}/src/libtable.so ${{github.workspace}}/libtable${SUFFIX}.so
             zip -9 ${{github.workspace}}/uppaal-libs-${OS_NAME}${SUFFIX}.zip libtable${SUFFIX}.so

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{github.workspace}}/uppaal-libs-${{ env.OS_NAME }}${{ env.SUFFIX }}.zip
          asset_name: uppaal-libs-${{ env.OS_NAME }}${{ env.SUFFIX }}.zip
          asset_content_type: application/zip
